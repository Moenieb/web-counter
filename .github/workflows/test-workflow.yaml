name: Python Test CI

# github events
on:
  push:
    branches:
    - main

env: #environment variable so that 'Run tests' pass. This is just to demo tests
  TEST: 'OK'

jobs:
  python-test:

  #Add strategy matrix to test multiple version of python as an example
  #You can even have muliple matrices e.g. This is going to run six times
  # jobs:
  # example_matrix:
  #   strategy:
  #     matrix:
  #       version: [10, 12, 14]
  #       os: [ubuntu-latest, windows-latest]

    # Remember to change the python-version as well when doing the matrix strategy
    # strategy: 
    #   matrix:
    #     python-version: [3.8, 3.9]
    runs-on: ubuntu-latest 

    steps:
    - name: Check out the code
    # using github action
      uses: actions/checkout@v4

    # another example of using github actions
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        # python-version: ${{ matrix.python-version }}
        python-version: "3.8"

    #This example to show how to install from command line 
    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # Run python app in directory also command line
    - name: Run tests
      run: python tests.py

  # Added two more test to demonstrate how tests can run in parallel. Check Actions on Github to see

  integration-test:
    runs-on: ubuntu-latest

    steps:
    - name: Simulate integration test
      run: echo "Run integration test" && sleep 5 && echo "Integration test pass!!"

  linting:
    runs-on: ubuntu-latest

    steps:
    - name: Simulate linting
      run: echo "Run linting" && sleep 5 && echo "Linting pass!!"

  build: 
    runs-on: ubuntu-latest

    needs: [pythn-est, integration-test, linting]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Building it
      run: echo "Software built!"

  deploy-staging:
    runs-on: ubuntu latest

    needs: [build]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Deploy to staging
      run: echo "Software deployed!"